{"version":3,"sources":["logo.svg","pages/Home.js","context/matchSlice.js","context/counterSlice.js","context/MatchState.js","pages/App.js","reportWebVitals.js","index.js"],"names":["Home","PHASES","initialState","team","match","alliance","phase","matchSlice","createSlice","name","reducers","setMatch","state","action","payload","console","log","startGame","actions","counterSlice","value","increment","decrement","incrementByAmount","configureStore","reducer","counter","counterReducer","matchReducer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAAe,I,WCwBAA,I,OCrBFC,EAGL,OAMKC,EAAe,CAC1BC,KAAM,GACNC,MAAO,GACPC,SAAU,OACVC,MAZU,YAeCC,EAAaC,YAAY,CACpCC,KAAM,OACNP,eACAQ,SAAU,CACRC,SAAU,SAACC,EAAOC,GAAY,IAAD,EACGA,EAAOC,QAAhCX,EADsB,EACtBA,KAAMC,EADgB,EAChBA,MAAOC,EADS,EACTA,SAClBU,QAAQC,IAAI,WAAY,CAACb,OAAMC,QAAOC,aACtCO,EAAMT,KAAOA,EACbS,EAAMR,MAAQA,EACdQ,EAAMP,SAAWA,GAEnBY,UAAW,SAACL,GACVA,EAAMN,MAAQL,M,EAKmBM,EAAWW,QAEnCX,G,EAFAI,S,EAAUM,UAEVV,EAAf,S,MCpCA,IAIaY,EAAeX,YAAY,CACtCC,KAAM,UACNP,aANmB,CACnBkB,MAAO,GAMPV,SAAU,CACRW,UAAW,SAACT,GACVA,EAAMQ,OAAS,GAGjBE,UAAW,SAACV,GACVA,EAAMQ,OAAS,GAGjBG,kBAAmB,SAACX,EAAOC,GACzBD,EAAMQ,OAASP,EAAOC,Y,EAK+BK,EAAaD,QAEzDC,G,EAFAE,U,EAAWC,U,EAAWC,kBAEtBJ,EAAf,SCtBqBK,YAAe,CAClCC,QAAS,CACPC,QAASC,EACTvB,MAAOwB,KCoCIC,MA/Bf,WACE,OACE,8CCFWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bbe6a5c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from '../logo.svg';\nimport '../styles/Home.css';\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","import { createSlice } from \"@reduxjs/toolkit\"\n\n\nexport const PHASES = {\n  newMatch: \"newMatch\",\n  standby: \"standby\",\n  auto: \"auto\",\n  teleop: \"teleop\",\n  endGame: \"endGame\",\n  gameOver: \"gameOver\",\n}\n\nexport const initialState = {\n  team: '',\n  match: '',\n  alliance: 'blue',\n  phase: PHASES.newMatch,\n}\n\nexport const matchSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    setMatch: (state, action) => {\n      let {team, match, alliance} = action.payload\n      console.log(\"setMatch\", {team, match, alliance})\n      state.team = team\n      state.match = match\n      state.alliance = alliance\n    },\n    startGame: (state) => {\n      state.phase = PHASES.auto\n    },\n  }\n})\n\nexport const { setMatch, startGame } = matchSlice.actions\n\nexport default matchSlice.reducer","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n  value: 0,\n}\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1\n    },\n\n    decrement: (state) => {\n      state.value -= 1\n    },\n\n    incrementByAmount: (state, action) => {\n      state.value += action.payload\n    }\n  }\n})\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n\nexport default counterSlice.reducer\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport counterReducer from './counterSlice'\nimport matchReducer from './matchSlice'\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    match: matchReducer\n  }\n})\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport AutoPhase from \"./AutoPhase\";\nimport Home from \"./Home\";\nimport NewMatch from \"./NewMatch\";\nimport Standby from \"./Standby\";\nimport SetGameWrapper from \"./SetGameWrapper\";\nimport { Counter } from \"./Counter\";\nimport { store } from \"../context/MatchState\";\n\nfunction App() {\n  return (\n    <p>ESCOUT HELLO</p>\n    // <Provider store={store}>\n    //   <Router>\n    //     <Routes>\n    //       <Route path=\"/\" element={<Home />} />\n    //       <Route path=\"/newMatch\" element={<NewMatch />} />\n    //       <Route path=\"/counter\" element={<Counter />} />\n    //       <Route\n    //         path=\"/standby\"\n    //         element={\n    //           <SetGameWrapper team=\"123\" match=\"44\" alliance=\"red\">\n    //             <Standby />\n    //           </SetGameWrapper>\n    //         }\n    //       />\n    //       <Route\n    //         path=\"/autoPhase\"\n    //         element={\n    //           <SetGameWrapper team=\"123\" match=\"44\" alliance=\"blue\">\n    //             <AutoPhase />\n    //           </SetGameWrapper>\n    //         }\n    //       />\n    //     </Routes>\n    //   </Router>\n    // </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}